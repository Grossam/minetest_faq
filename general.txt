# Generic Predictive Algorithm or Generic Cause-Consequence Algorithm

The GPA or GCCA is able to learn schems and to predict probable issues of a given situation.

## Basic cause-consequence association

f(index, [time1, time2, ...]) -> (happening_uncertainty, (time1, time_uncertainty))

The first parameter (`index`) is the schem index in the schems table. The `times` list is the happening times of the different causes, the first cause time (t0) being not given since it is always 0.

The returned list contains the corresponding consequence, with its happening probability and its time uncertainty.

## Schem representation

{
	causes = [event...],
	successful = [
		([cause_time...], consequence_time)...
	],
	unsuccessful = [
		[cause_time...]...
	]
}

There are some things to note:
1. There is only one consequence per schem.
2. All causes must be met to make the schem useable. They must happen in the same order as stored in the causes list.
3. The schem only stores the issues of all causes that have happened. The resulting probabilities and uncertainties are calculated on the fly by the basic cause-consequence function by interpolation.
4. The [cause_time...] lists contain all the happening times of causes in the same order as in the causes list. They don't include the first cause, as its time is always 0.

## Result calculation algorithm

This algorithm has to compute the result of a serie of events (causes) using a unique schem, based on its past experience (stored in the schem).

For each cause:
The algorithm computes the mean and the standard deviation of past successful and unsuccessful cause happenings times (Ms, Mu, Ss, Su). Then it computes the ratio between the means and the difference bewteen the mean and the 
